apiVersion: apps/v1
kind: Deployment
metadata:
  name: flagger
  namespace: istio-system
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: flagger
  template:
    metadata:
      labels:
        app: flagger
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      serviceAccountName: flagger
      containers:
      - name: flagger
        image: ghcr.io/fluxcd/flagger:1.0.0
        imagePullPolicy: IfNotPresent
        args:
          - -log-level=info
          - -include-label-prefix=app.kubernetes.io
          - -mesh-provider=istio
          - -metrics-server=http://prometheus:9090
        ports:
        - name: http
          containerPort: 8080
        livenessProbe:
          exec:
            command:
            - wget
            - --quiet
            - --tries=1
            - --timeout=2
            - --spider
            - http://localhost:8080/healthz
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - wget
            - --quiet
            - --tries=1
            - --timeout=2
            - --spider
            - http://localhost:8080/healthz
          timeoutSeconds: 5
        resources:
          limits:
            memory: "512Mi"
            cpu: "1000m"
          requests:
            memory: "32Mi"
            cpu: "10m"
        securityContext:
          readOnlyRootFilesystem: true
          runAsUser: 10001
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: flagger
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: flagger
subjects:
  - kind: ServiceAccount
    name: flagger
    namespace: istio-system
