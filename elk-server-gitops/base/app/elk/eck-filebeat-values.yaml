---
# Default values for eck-beats.
# This is a YAML-formatted file.

# Overridable names of the Beats resource.
# By default, this is the Release name set for the chart,
# followed by 'eck-beats'.
#
# nameOverride will override the name of the Chart with the name set here,
# so nameOverride: quickstart, would convert to '{{ Release.name }}-quickstart'
#
nameOverride: "elkcorp"
#
# fullnameOverride will override both the release name, and the chart name,
# and will name the Beats resource exactly as specified.
#
# fullnameOverride: "quickstart"

# Version of Elastic Beats.
#
version: 8.17.0

# Labels that will be applied to Elastic Beats.
#
labels: {}

# Annotations that will be applied to Elastic Beats.
#
annotations:
  sidecar.istio.io/inject: "true"

# ** Deprecation Notice **
# The previous versions of this Helm Chart simply used the `spec` field here
# and allowed the user to specify any fields below spec that were templated directly
# into the final Beats manifest. This is no longer the preferred way to specify these
# fields and each field that is supported underneath `spec` is now directly specified
# in this values file. Currently both patterns are supported for backwards compatibility
# but we plan to remove the `spec` field in the future.
# spec: {}

# Type of Elastic Beats. Standard types of Beat are [filebeat,metricbeat,heartbeat,auditbeat,packetbeat,journalbeat].
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-deploy-elastic-beat
#
# Note: This is required to be set, or the release install will fail.
#
type: "filebeat"

# Beats image to deploy.
#
# image: docker.elastic.co/beats/metricbeat:8.17.0-SNAPSHOT

# Referenced resources are below and depending on the setup, at least elasticsearchRef is required for a functional Beat.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-connect-es
#
# Reference to ECK-managed Kibana instance.
#
kibanaRef:
  name: kibana-sla
  # Optional namespace reference to Kibana instance.
  # If not specified, then the namespace of the Beats instance
  # will be assumed.
  #
  namespace: eck-stack

# Reference to ECK-managed Elasticsearch instance.
# *Note* If Beat's output is intended to go to Elasticsearch and not something like Logstash,
# this elasticsearchRef must be updated to the name of the Elasticsearch instance.
#
elasticsearchRef: {}
  #name: elastic-sla
  # Optional namespace reference to Elasticsearch instance.
  # If not specified, then the namespace of the Beats instance
  # will be assumed.
  #
  #namespace: observability

# Daemonset, or Deployment specification for the type of Beat specified.
# At least one is required of [daemonSet, deployment].
# No default is currently set, refer to https://github.com/elastic/cloud-on-k8s/issues/7429.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-chose-the-deployment-model
#
# deployment:
#   podTemplate:
#     spec:
#       securityContext:
#         runAsUser: 0
daemonSet:
  podTemplate:
    spec:
       tolerations:
       - key: "eck-role"
         operator: "Exists"
         effect: "NoSchedule"
       serviceAccountName: elastic-beat-filebeat-sla
       automountServiceAccountToken: true
       terminationGracePeriodSeconds: 30
       dnsPolicy: ClusterFirstWithHostNet
       hostNetwork: true # Allows to provide richer host metadata
       containers:
        - name: filebeat
          securityContext:
            runAsUser: 0
          env:
            - name: NODE_NAME
              valueFrom:
                 fieldRef:
                    fieldPath: spec.nodeName
          volumeMounts:
          - name: ca-certs
            mountPath: /etc/certs
            readOnly: true
          - name: varlogcontainers
            mountPath: /var/log/containers
          - name: varlogpods
            mountPath: /var/log/pods
          - name: varlibdockercontainers
            mountPath: /var/lib/docker/containers
       volumes:
        - name: ca-certs
          secret:
            secretName: logstash-certs-full-chain
            optional: false
        - name: varlogcontainers
          hostPath:
            path: /var/log/containers
        - name: varlogpods
          hostPath:
            path: /var/log/pods
        - name: varlibdockercontainers
          hostPath:
            path: /var/lib/docker/containers


# Configuration of Beat, which is dependent on the `type` of Beat specified.
# NOTE: The `config` and `configRef` fields are mutually exclusive. Only one of them should be defined at a time,
# as using both may cause conflicts.
#
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-custom-configuration
#
config:
  agent.name: "filebeat-ELK-{{hostname}}"
  logging.level: info
  filebeat:
    autodiscover:
        providers:
        - type: kubernetes
          node: ${NODE_NAME}
          hints:
            enabled: true
            default_config:
              type: container
              paths:
              - /var/log/containers/*${data.kubernetes.container.id}.log
  processors:
  - add_host_metadata: {}
  - add_cloud_metadata: {}
  fields:
    environment: "ELK"
    location: "cluster-ELK"
  output.logstash:
     hosts: ["192.168.1.8:5044"]
     ssl.enabled: false
     ttl: 60s
     timeout: 30s
     codec: json_lines 

#     hosts: ["logstash-sla-ls-beats.observability.svc.cluster.local:5044"]
#     hosts: ["logstash-sla-ls-beats.observability.svc:5044"]
#     ssl.certificate_authorities: ["/etc/certs/ca.crt"]
#     ssl.certificate: "/etc/certs/tls.crt"
#     ssl.key: "/etc/certs/tls.key"
#     ssl.verification_mode: full
#     ssl.enabled: true
# ssl.certificate_authorities: ["/etc/certs/ca.crt"]
# Reference a configuration in a Secret.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-custom-configuration
#
# configRef:
#   secretName: ""

# The HTTP layer configuration for the Beats Service.
#
# http:

# Settings for configuring stack monitoring.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-stack-monitoring.html
#
# monitoring: {}
  # metrics:
  #   elasticsearchRefs:
  #   - name: monitoring
  #     namespace: observability
  # logs:
  #   elasticsearchRefs:
  #   - name: monitoring
  #     namespace: observability

# SecureSettings is a list of references to Kubernetes Secrets containing sensitive configuration options for Elastic Beats.
secureSettings: []
# - secretName: my-secret-with-secure-settings

# Number of revisions to retain to allow rollback in the underlying Deployment.
# If not set Kubernetes sets this to 10 by default.
#
# revisionHistoryLimit: 2

# ServiceAccount to be used by Elastic Beats. Some Beats features (such as autodiscover or Kubernetes module metricsets)
# require that Beat Pods interact with Kubernetes APIs. This functionality requires specific permissions
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-role-based-access-control-for-beats
#
serviceAccount:
  name: elastic-beat-filebeat-sla
  namespace: observability

# ClusterRoleBinding to be used by Elastic Beats. Similar to ServiceAccount, this is required in some scenarios.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-role-based-access-control-for-beats
#
clusterRoleBinding:
  name: elastic-beat-autodiscover-binding
  subjects:
  - kind: ServiceAccount
    name: elastic-beat-filebeat-sla
    namespace: observability
  roleRef:
    kind: ClusterRole
    name: elastic-beat-autodiscover
    apiGroup: rbac.authorization.k8s.io

# ClusterRole to be used by Elastic Beats. Similar to ServiceAccount, this is required in some scenarios.
# ref: https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-beat-configuration.html#k8s-beat-role-based-access-control-for-beats
#
clusterRole:
  name: elastic-beat-autodiscover
  rules:
  - apiGroups: [""]
    resources:
    - events
    - pods
    - namespaces
    - nodes
    verbs:
    - get
    - watch
    - list

